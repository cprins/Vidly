@model Vidly.ViewModels.MovieFormViewModel

@{
    ViewBag.Title = "MovieForm";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@{
    @* si hay mas de 5 clientes la varible className se le coloca la palabra "Popular" en caso contrario se deja nulo, esto para hacer parametros de clase dinamicos *@

    var nombreBoton = Model.Movie == null || Model.Movie.Id == 0 ? "Crear" : "Actualizar";

}


@if (Model.Movie == null || Model.Movie.Id == 0)
{
    <h2>Nueva Película</h2>
}
else
{
    <h2>Editar Película</h2>
}


@using (Html.BeginForm("Save", "Movies"))
{
    <div class="form-group">
        @Html.Label("Nombre")
        @Html.TextBoxFor(m => m.Movie.Name, new { @class = "form-control" })
        @Html.ValidationMessageFor(c => c.Movie.Name)
    </div>
    <div class="form-group">
        @Html.Label("Fecha de salida de la pelicula")
        @Html.TextBoxFor(m => m.Movie.ReleaseDate, "{0:dd-MM-yyyy}", new { @class = "form-control" })
        @Html.ValidationMessageFor(c => c.Movie.ReleaseDate)

    </div>
    <div class="form-group">
        @Html.Label("Género")
        @Html.DropDownListFor(m => m.Movie.GenreId, new SelectList(Model.Genres, "Id", "Name"), "Selecciona el tipo de Género", new { @class = "form-control" })
        @Html.ValidationMessageFor(c => c.Movie.GenreId)
    </div>
    <div class="form-group">
        @Html.Label("Cantidad en Stock")
        @Html.TextBoxFor(m => m.Movie.CantStock, new { @class = "form-control" })
        @Html.ValidationMessageFor(c => c.Movie.CantStock)
    </div>
    @Html.HiddenFor(m => m.Movie.Id, new { @Value = Model.Movie == null ? 0 : Model.Movie.Id })
    // CPRINS Para evitar falsificacion de solicitud
    @Html.AntiForgeryToken();

    <button type="submit" class="btn btn-primary">@nombreBoton</button>

    // Para que las validaciones de propiedades se hagan al nivel del cliente
    @section scripts
    {
        @Scripts.Render("~/bundles/jqueryval")
    }

}

